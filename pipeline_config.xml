<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1254.v3f64639b_11dd">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3536.vb_8a_6628079d5">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Validacion&apos;) {
            steps {
                // Get some code from a GitHub repository
                echo &quot;Validando datos...&quot;
                //sh &apos;python --version&apos;
                //sh &apos;pip list&apos;
                script {
                    currentBuild.displayName = &quot;Nov-2022-BD54&quot;
                    currentBuild.description = &quot;planificacion.quipucamayoc&quot;
                }
            }
        }
        stage(&apos;Registro&apos;) {
            steps {
                // Get some code from a GitHub repository
                echo &quot;Registrado en redmine...&quot;

                // To run Maven on a Windows agent, use
                // bat &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;
            }
        }
        stage(&apos;Conversion&apos;) {
            steps {
                // Get some code from a GitHub repository
                echo &quot;Convirtiendo a select...&quot;

                // To run Maven on a Windows agent, use
                // bat &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;
            }
        }
        stage(&apos;Comparacion&apos;) {
            steps {
                // Get some code from a GitHub repository
                echo &quot;Comparacion de registros en incidencias y produccion...&quot;

                // To run Maven on a Windows agent, use
                // bat &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;
            }
        }
        stage(&apos;Backup&apos;) {
            steps {
                // Get some code from a GitHub repository
                echo &quot;Guardando registros de produccion...&quot;

                // To run Maven on a Windows agent, use
                // bat &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;
            }
        }
        stage(&apos;Ejecucion&apos;) {
            agent { docker { image &apos;maven:3.8.6-openjdk-11-slim&apos; } }
            steps {
                // Get some code from a GitHub repository
                echo &quot;Guardando registros de produccion...&quot;
                sh &apos;mvn --version&apos;
                // To run Maven on a Windows agent, use
                // bat &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>